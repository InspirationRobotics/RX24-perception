# import time

# ## print unix time every 0.1 second
# while True:
#     print(time.time(), end='\r')
#     time.sleep(0.1)


3 cameras: one pointed left, one pointed right, one pointed forward

Merge the cameras into a panormaic single frame.
Find the transformation matrix between the left to the center camera and the right to the center camera.
Apply the transformation/homography matrix on both the frame itself, but also on the bounding boxes.

Unified RobotX perception stack

Automatically inits and sets up all 3 cameras
Load model on all cameras? One one camera etc.
Provide frames to the user in a unified way.


mission class
loads the cameras
load the class

run class function in loop (input is frame, and position data)
send output GNC to the robot (ideally just target vector or waypoint)


mission_script

Load the cameras

main loop
    get frames
    (maybe get lidar)
    based on data from frames (will do some additional CV)
    ret
